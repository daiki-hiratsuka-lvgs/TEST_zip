name: Archive Google Drive Yearly Folder

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 1 * *'

env:
  RCLONE_REMOTE_NAME: "gdrive"
  DRIVE_SEARCH_PATH: "コピー先"
  PYTHON_SCRIPT: "archive_script.py"
  YEARS_AGO: 4

jobs:
  archive-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install and Configure rclone
        run: sudo -v ; curl https://rclone.org/install.sh | sudo bash

      # ★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
      # ▼▼▼【デバッグ用ステップ】Secretの中身をここで確認します ▼▼▼
      # ★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
      - name: DEBUG - Check Secret Content
        run: |
          echo "--- Secret Content Check ---"
          SECRET_CONTENT="${{ secrets.RCLONE_CONF }}"
          if [ -z "$SECRET_CONTENT" ]; then
            echo "Error: Secret RCLONE_CONF is empty or not found."
            exit 1
          fi
          echo "Secret was found. Checking first 15 characters."
          FIRST_CHARS=$(echo "$SECRET_CONTENT" | cut -c 1-15)
          echo "First 15 characters of the secret are:"
          echo "$FIRST_CHARS"
          echo "--- End of Secret Content Check ---"
          
          # ここで一度、rclone.confファイルを作成してみる
          echo "${{ secrets.RCLONE_CONF }}" > rclone.conf
          echo "rclone.conf file created. Checking its content:"
          cat rclone.conf

      - name: Create rclone.conf from Secret
        run: |
          mkdir -p ~/.config/rclone
          echo "${{ secrets.RCLONE_CONF }}" > ~/.config/rclone/rclone.conf

      # このステップからエラーが出るはず
      - name: Download target folder from Google Drive
        run: |
          LOCAL_FOLDER="drive_data"
          mkdir -p $LOCAL_FOLDER
          rclone copy "${{ env.RCLONE_REMOTE_NAME }}:${{ env.DRIVE_SEARCH_PATH }}" $LOCAL_FOLDER
      
      # (以下、変更なし)
      - name: Run Python Script
        run: python "${{ env.PYTHON_SCRIPT }}"
      - name: Upload zip and Delete original folder
        if: success()
        run: |
          if [ ! -f "folder_to_delete.txt" ]; then exit 0; fi
          RELATIVE_ZIP_PATH=$(cat zip_to_upload.txt)
          RELATIVE_FOLDER_PATH=$(cat folder_to_delete.txt)
          LOCAL_ZIP_FULL_PATH="drive_data/$RELATIVE_ZIP_PATH"
          if [ ! -f "$LOCAL_ZIP_FULL_PATH" ]; then exit 1; fi
          REMOTE_ZIP_FULL_PATH="${{ env.DRIVE_SEARCH_PATH }}/${RELATIVE_ZIP_PATH}"
          rclone copyto "$LOCAL_ZIP_FULL_PATH" "${{ env.RCLONE_REMOTE_NAME }}:$REMOTE_ZIP_FULL_PATH"
          REMOTE_FOLDER_FULL_PATH="${{ env.DRIVE_SEARCH_PATH }}/${RELATIVE_FOLDER_PATH}"
          rclone purge "${{ env.RCLONE_REMOTE_NAME }}:${REMOTE_FOLDER_FULL_PATH}"

